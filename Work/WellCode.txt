import feedparser
import requests
from datetime import datetime

# Fonction pour convertir une date Feedparser en ISO 8601
def convert_to_iso8601(date_str):
    try:
        parsed_date = datetime.strptime(date_str, "%a, %d %b %Y %H:%M:%S %z")
        return parsed_date.isoformat()
    except ValueError:
        return None

# Liste des mots-clés pour filtrer les articles
keywords = ['réseau', 'sécurité informatique', 'numérique']

# Liste des flux RSS (Feedly et Google Alerts)
rss_feeds = [
    "http://feeds.feedburner.com/Grafikart",
    "http://blog.openclassrooms.com/feed/",
    "https://www.google.com/alerts/feeds/00304130937566327789/2520171459693073861",
]

# Notion API Configuration
NOTION_API_URL = "https://api.notion.com/v1/pages"
NOTION_API_KEY = "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"  # Token de Notion
DATABASE_ID = "144359de043f80359769f4296f5cef97"  # ID de ta base de données

# Fonction pour analyser les flux RSS avec filtrage
def parse_rss_feeds(feeds):
    articles = []
    for feed_url in feeds:
        print(f"Analyse du flux RSS : {feed_url}")
        feed = feedparser.parse(feed_url)
        
        if 'title' in feed.feed:
            print(f"Flux trouvé : {feed.feed.title}")
        else:
            print("Erreur : Flux non valide.")
            continue
        
        for entry in feed.entries:
            # Vérification des mots-clés dans le titre et le résumé
            if any(keyword in entry.title.lower() or keyword in entry.summary.lower() for keyword in keywords):
                article = {
                    "title": entry.title,
                    "link": entry.link,
                    "published": entry.published if "published" in entry else "N/A",
                    "summary": entry.summary if "summary" in entry else "N/A"
                }
                articles.append(article)

    return articles

# Fonction pour envoyer un article à Notion
def add_article_to_notion(article):
    headers = {
        "Authorization": f"Bearer {NOTION_API_KEY}",
        "Content-Type": "application/json",
        "Notion-Version": "2022-06-28"
    }
    iso_date = convert_to_iso8601(article["published"])

    data = {
        "parent": {"database_id": DATABASE_ID},
        "properties": {
            "Title": {"title": [{"text": {"content": article["title"]}}]},
            "Link": {"url": article["link"]},
            "Published": {"date": {"start": iso_date} if iso_date else None},
            "Summary": {"rich_text": [{"text": {"content": article["summary"]}}]}
        }
    }
    response = requests.post(NOTION_API_URL, headers=headers, json=data)
    if response.status_code == 200:
        print(f"Article ajouté à Notion : {article['title']}")
    else:
        print(f"Erreur lors de l'ajout à Notion : {response.status_code}, {response.text}")

# Fonction principale
if __name__ == "__main__":
    # Étape 1 : Analyse des flux RSS
    collected_articles = parse_rss_feeds(rss_feeds)
    
    # Étape 3 : Envoi à Notion
    print(f"\nAjout des articles à Notion...")
    for article in collected_articles:
        add_article_to_notion(article)

    print(f"\n{len(collected_articles)} articles ajoutés à Notion.")